name: Docker Image - Actions Runner Base
env:
  # Must be identical to what is in DOCKER_DIR
  IMAGE_NAME: actions-runner-base
  REGISTRY: ghcr.io
  DOCKER_DIR: docker

on:
  push:
    paths:
      - "docker/actions-runner-base/**"
    # branches:
    #   - 'main'
    # tags:
    #   - 'v*'
  workflow_dispatch:
  pull_request:
    branches:
      - 'main'

jobs:
  build:
    name: Build & Push Docker Image - Actions Runner Base
    runs-on: ["arc-runner-set-samis-group"]
    # runs-on: [self-hosted, linux, x64]
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      # id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1

      # # Install the cosign tool except on PR: https://github.com/sigstore/cosign-installer
      # - name: Install cosign
      #   if: github.event_name != 'pull_request'
      #   uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
      #   with:
      #     cosign-release: 'v1.11.0'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract Docker metadata for ${{ env.REGISTRY }}
        id: metadata-ghcr
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for main branch
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            # branch event
            type=ref,event=branch
            # tag event
            type=ref,event=tag
            # pull request event
            type=ref,event=pr
            # minimal (short sha)
            type=sha,prefix=,format=short,enable=true
            # full length sha
            type=sha,prefix=,format=long,enable=true
            # type=semver,pattern={{version}}
            # type=semver,pattern={{major}}.{{minor}}
            # type=schedule
            # set latest tag for default branch
            # type=raw,value=latest,enable={{is_default_branch}}

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to ${{ env.REGISTRY }}
        id: build-and-push-ghcr
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ env.DOCKER_DIR }}/${{ env.IMAGE_NAME }}/Dockerfile
          tags: ${{ steps.metadata-ghcr.outputs.tags }}
          labels: ${{ steps.metadata-ghcr.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          push: true
          # push: ${{ github.event_name != 'pull_request' }} # Don't push on PR
          # push: ${{ startsWith(github.ref, 'refs/tags/') }} # Push only when tagged

      # - name: Sign the image with cosign
      #   if: github.event_name != 'pull_request'
      #   run: |
      #     cosign sign --key cosign.key ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Create release when one of these tags are committed - alpha | beta | rc
        uses: josephrodriguez/swift-release@v1.1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
