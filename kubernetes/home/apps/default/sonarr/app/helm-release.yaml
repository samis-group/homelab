---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sonarr
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    podAnnotations:
      secret.reloader.stakater.com/reload: sonarr-secrets
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/sonarr-develop
      tag: '4'
      pullPolicy: Always

    # podSecurityContext:
    #   runAsUser: 568
    #   runAsGroup: 568
    #   fsGroup: 568
    #   supplementalGroups: [10000]
    #   fsGroupChangePolicy: "OnRootMismatch"

    env:
      TZ:
        valueFrom:
          secretKeyRef:
            name: common-secrets
            key: TZ
      SONARR__INSTANCE_NAME: Sonarr
      SONARR__PORT: &port 8989
      SONARR__APPLICATION_URL: "https://sonarr.shaklab.com"
      SONARR__LOG_LEVEL: info

    # dnsConfig:
    #   options:
    #     - name: ndots
    #       value: "1"

    service:
      main:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: sonarr.shaklab.com
          external-dns.alpha.kubernetes.io/target: ipv4.shaklab.com
        ports:
          http:
            port: *port

    probes:
      liveness: &probes
        enabled: true
        custom: true
        spec:
          httpGet:
            path: /ping
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false

    # ingress:
    #   main:
    #     enabled: true
    #     ingressClassName: "traefik"
    #     annotations:
    #       traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    #       traefik.ingress.kubernetes.io/router.middlewares: "networking-rfc1918-ips@kubernetescrd"
    #       hajimari.io/enable: "true"
    #       hajimari.io/group: "Media"
    #       hajimari.io/icon: mdi:television-classic
    #     hosts:
    #       - host: &host "sonarr.home.${SECRET_DOMAIN}"
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #     tls:
    #       - secretName: "wildcard-internal-${SECRET_DOMAIN/./-}-tls"
    #         hosts:
    #           - *host

    # resources:
    #   requests:
    #     cpu: 22m
    #     memory: 4065M
    #   limits:
    #     # memory: 5162M

    persistence:
      config:
        enabled: true
        existingClaim: sonarr-config
      nfs-nas-tv:
        enabled: true
        mountPath: /media/tv
        path: /volume1/docker/data/media/tv
        server: 10.10.0.2
        type: nfs
      downloads-torrents:
        enabled: true
        mountPath: /downloads/torrents
        type: nfs
        server: 10.10.0.2
        path: /volume1/docker/data/downloads/torrents
      downloads-nzb:
        enabled: true
        mountPath: /downloads/nzb
        type: nfs
        server: 10.10.0.2
        path: /volume1/docker/data/downloads/nzb
      # backups:
      #   enabled: true
      #   mountPath: /config/Backups
      #   type: nfs
      #   server: "${PRIMARY_NFS_SERVER}"
      #   path: "${NFS_KUBERNETES_PATH}/backups/sonarr"

    metrics:
      enabled: true
      serviceMonitor:
        interval: 3m
        scrapeTimeout: 1m
      prometheusRule:
        enabled: true
      exporter:
        image:
          repository: ghcr.io/onedr0p/exportarr
          tag: v1.1.0
        env:
          port: 9794
          additionalMetrics: false
          unknownQueueItems: true
