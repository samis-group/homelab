---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: bazarr
  namespace: default
spec:
  interval: 1h
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      interval: 1h
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        type: statefulset
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            # supplementalGroups:
            #   - 34
            #   - 100
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: "1"
              pullPolicy: IfNotPresent
            env:
              TZ:
                valueFrom:
                  secretKeyRef:
                    name: common-secrets
                    key: TZ
              BAZARR__INSTANCE_NAME: Bazarr
              BAZARR__PORT: &port 6767
              BAZARR__APPLICATION_URL: "https://bazarr.shaklab.com"
              BAZARR__LOG_LEVEL: info
            resources:
              requests:
                cpu: "0.04"
                memory: "250M"
              limits:
                memory: "6000M"

    service:
      main:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: bazarr.shaklab.com
          external-dns.alpha.kubernetes.io/target: ipv4.shaklab.com
        ports:
          http:
            port: *port

    persistence:
      config:
        enabled: true
        existingClaim: bazarr-config
      nfs-nas-movies:
        type: nfs
        server: 10.10.0.2
        path: /volume1/docker/data/media/movies
        advancedMounts:
          main:
            main:
              - path: /media/movies
      nfs-nas-tv:
        type: nfs
        server: 10.10.0.2
        path: /volume1/docker/data/media/tv
        advancedMounts:
          main:
            main:
              - path: /media/tv
      downloads-torrents:
        type: nfs
        server: 10.10.0.2
        path: /volume1/docker/data/downloads/torrents
        advancedMounts:
          main:
            main:
              - path: /downloads/torrents
      downloads-nzb:
        type: nfs
        server: 10.10.0.2
        path: /volume1/docker/data/downloads/nzb
        advancedMounts:
          main:
            main:
              - path: /downloads/nzb

    # ingress:
    #   main:
    #     enabled: true
    #     className: "traefik"
    #     annotations:
    #       cert-manager.io/cluster-issuer: letsencrypt-production
    #       traefik.ingress.kubernetes.io/router.entrypoints: websecure
    #       # traefik.ingress.kubernetes.io/router.middlewares: "network-chain-global-auth@kubernetescrd"
    #       traefik.ingress.kubernetes.io/router.middlewares: network-chain-external@kubernetescrd
    #       external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    #       external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
    #       external-dns/is-public: "true"
    #       external-dns/powerdns: "true"
    #     hosts:
    #       - host: *host-cluster
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #             service:
    #               name: main
    #               port: http
    #       - host: &host "bazarr.${INGRESS_DOMAIN}"
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #             service:
    #               name: main
    #               port: http
    #     tls:
    #       - secretName: tls.bazarr
    #         hosts:
    #           - *host-cluster
    #           - *host
