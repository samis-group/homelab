---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sabnzbd
  namespace: default
spec:
  interval: 1h

  # dependsOn:
  #   - name: traefik
  #     namespace: default

  chart:
    spec:
      chart: app-template
      version: 1.5.1
      interval: 1h
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      retries: 3

  uninstall:
    keepHistory: false

  values:
    podAnnotations:
      secret.reloader.stakater.com/reload: sabnzbd-secrets
    image:
      repository: ghcr.io/onedr0p/sabnzbd
      tag: "4"
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"

    # podSecurityContext:
    #   runAsUser: 1000
    #   runAsGroup: 1000
    #   fsGroup: 1000
    #   supplementalGroups: [10000]
    #   fsGroupChangePolicy: "OnRootMismatch"

    envFrom:
      - secretRef:
          name: sabnzbd-secrets

    env:
      TZ:
        valueFrom:
          secretKeyRef:
            name: common-secrets
            key: TZ
      SABNZBD__PORT: &port 8080
      SABNZBD__HOST_WHITELIST_ENTRIES: >-
        sabnzbd,
        sabnzbd.sabnzbd,
        sabnzbd.shaklab.com,
        nzb.shaklab.com

    service:
      main:
        annotations:
          external-dns.alpha.kubernetes.io/hostname: nzb.shaklab.com, sabnzbd.shaklab.com
          external-dns.alpha.kubernetes.io/target: ipv4.shaklab.com
        ports:
          http:
            port: *port
      # proxy:
      #   enabled: true
      #   primary: false
      #   type: ClusterIP
      #   ports:
      #     tinyproxy:
      #       enabled: true
      #       port: 8888
      #       protocol: TCP
      #       targetPort: 8888
      # ext-proxy:
      #   enabled: true
      #   primary: false
      #   type: LoadBalancer
      #   loadBalancerIP: ${PROXY_LB}
      #   externalTrafficPolicy: Local
      #   ports:
      #     ext-tinyproxy:
      #       enabled: true
      #       port: 8888
      #       protocol: TCP
      #       targetPort: 8888

    probes:
      liveness: &probes
        enabled: false
        custom: true
        spec:
          httpGet:
            path: /api?mode=version
            port: *port
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
      readiness: *probes
      startup:
        enabled: false

    # ingress:
    #   main:
    #     enabled: true
    #     ingressClassName: traefik-external
    #     annotations:
    #       traefik.ingress.kubernetes.io/router.entrypoints: websecure
    #       traefik.ingress.kubernetes.io/router.middlewares: middlewares-chain-oauth@kubernetescrd
    #       traefik.ingress.kubernetes.io/router.tls.options: traefik-secure-tlsoptions@kubernetescrd
    #       # hajimari.io/enable: "true"
    #       # hajimari.io/icon: mdi:download-circle
    #       # hajimari.io/group: downloads
    #     hosts:
    #       - host: &host sabnzbd.shaklab.com
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #       - host: &host2 nzb.shaklab.com
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #     tls:
    #       - hosts:
    #           - *host
    #           - *host2
    #       - secretName: shaklab-com-tls-certs

    # volumeClaimTemplates:
    #   - name: config
    #     mountPath: /config
    #     accessMode: ReadWriteOnce
    #     size: 2Gi
    #     storageClass: longhorn

    persistence:
      config:
        enabled: true
        existingClaim: sabnzbd-config
      nfs-nas-media:
        enabled: true
        mountPath: /media
        path: /volume1/docker/data/media
        server: 10.10.0.2
        type: nfs
      downloads:
        enabled: true
        mountPath: /config/Downloads
        type: nfs
        server: 10.10.0.2
        path: /volume1/docker/data/downloads/nzb
      # backups:
      #   enabled: true
      #   mountPath: /config/Backups
      #   type: nfs
      #   server: "${PRIMARY_NFS_SERVER}"
      #   path: "${NFS_KUBERNETES_PATH}/backups/sonarr"

    # sidecars:
    #   vpn:
    #     image: ghcr.io/qdm12/gluetun:v3.35.0@sha256:a98d1ec99e09a1b806aff7f0c3d8a133a8ede7d3d7a250b62029a39a61f01525
    #     envFrom:
    #       - secretRef:
    #           name: primary-conf14
    #     env:
    #       TZ: ${TIMEZONE}
    #       VPN_SERVICE_PROVIDER: custom
    #       VPN_TYPE: wireguard
    #       FIREWALL_OUTBOUND_SUBNETS: "10.96.0.0/12"
    #       DOT: "off"
    #       DNS_KEEP_NAMESERVER: "off"
    #       DNS_ADDRESS: "10.96.0.10"
    #       BLOCK_MALICIOUS: "off"
    #       HTTPPROXY: "on"
    #       HTTPPROXY_LISTENING_ADDRESS: ":8888"
    #       HTTPPROXY_STEALTH: "on"
    #       HTTPPROXY_LOG: "on"
    #       SHADOWSOCKS: "off"
    #     ports:
    #       - containerPort: 8888
    #         protocol: TCP
    #     securityContext:
    #       runAsUser: 0
    #       runAsGroup: 0
    #       capabilities:
    #         add:
    #           - NET_ADMIN
    #           - SYS_MODULE

    resources:
      requests:
        cpu: 1m
        memory: 256Mi
      limits:
        memory: 34Gi

    # metrics:
    #   enabled: true
    #   serviceMonitor:
    #     interval: 4m
    #     scrapeTimeout: 1m
    #   prometheusRule:
    #     enabled: true
    #   exporter:
    #     image:
    #       repository: ghcr.io/onedr0p/exportarr
    #       tag: v1
    #     env:
    #       port: 9794
    #       additionalMetrics: false
    #       unknownQueueItems: true
