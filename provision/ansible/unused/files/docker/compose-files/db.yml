---
#######################################
### THIS FILE IS MANAGED BY ANSIBLE ###
###    PLEASE MAKE CHANGES THERE    ###
#######################################

version: "3.7"

########################### EXTENSION FIELDS

# To use this put this block in your service: "<<: *logging"
x-logging: &logging
  logging:
    driver: loki
    options:
      loki-url: "http://${SERVER_IP}:${LOKI_PORT}/loki/api/v1/push"

########################### NETWORKS

networks:
  defaulty:
    name: defaulty
    external: true
  traefik_proxy:
    name: traefik_proxy
    external: true

########################### SERVICES

services:
  # phpMyAdmin - Database management
  # https://hub.docker.com/_/phpmyadmin
  # Create a new user with admin privileges. Cannot login as MySQL root for some reason.
  phpmyadmin:
    container_name: phpmyadmin
    image: phpmyadmin:latest
    init: true
    restart: unless-stopped
    networks:
      - traefik_proxy
      - defaulty
    ports:
      - "${PHPMYADMIN_PORT}:80"
    # volumes:
    #   - ${DOCKERDIR}/appdata/phpmyadmin:/etc/phpmyadmin
    environment:
      - PMA_HOST=${SERVER_IP}   # Because mariadb is on host networking
      - PMA_PORT=${MARIADB_PORT}
      #- PMA_ARBITRARY=1  # Allows you to enter a database server hostname on login form.
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.phpmyadmin-rtr.entrypoints=https"
      - "traefik.http.routers.phpmyadmin-rtr.rule=Host(`pma.$DOMAINNAME`, `phpmyadmin.$DOMAINNAME`)"
      ## Middlewares
      - "traefik.http.routers.phpmyadmin-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.phpmyadmin-rtr.service=phpmyadmin-svc"
      - "traefik.http.services.phpmyadmin-svc.loadbalancer.server.port=80"
    <<: *logging

  # Redis - Key-value Store
  # https://hub.docker.com/_/redis/
  redis:
    container_name: redis
    image: redis:latest
    init: true
    restart: always
    healthcheck:
      test: redis-cli -a $${REDIS_PASSWORD} ping | grep PONG
      interval: 10s
      timeout: 3s
      retries: 5
    entrypoint: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD} --maxmemory 512mb --maxmemory-policy allkeys-lru
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - defaulty
    volumes:
      - ${DOCKERDIR}/appdata/redis:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}    # For healthcheck
    <<: *logging

  # Redis Commander - Redis Management Tool
  # https://hub.docker.com/r/rediscommander/redis-commander/
  rediscommander:
    container_name: rediscommander
    image: rediscommander/redis-commander:latest
    init: true
    restart: always
    ports:
      - "${REDISCOMMANDER_PORT}:8081"
    networks:
      - traefik_proxy
      - defaulty
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    labels:
      - "traefik.enable=true"
      ## HTTP Routers
      - "traefik.http.routers.rediscommander-rtr.entrypoints=https"
      - "traefik.http.routers.rediscommander-rtr.rule=Host(`redis.${DOMAINNAME}`)"
      ## Middlewares
      - "traefik.http.routers.rediscommander-rtr.middlewares=chain-oauth@file"
      ## HTTP Services
      - "traefik.http.routers.rediscommander-rtr.service=rediscommander-svc"
      - "traefik.http.services.rediscommander-svc.loadbalancer.server.port=8081"
    <<: *logging
