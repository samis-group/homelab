---
# Playbook run tasks default actions:
install_os_packages: true
# Run `make copy-files` whenever it needs updating.
copy_files: true
install_docker: true
git: true   # Docker and WSL
provision_vms: true   # Provision VM's
provision_lxcs: true  # Provision LXC's
provision_truenas: true  # Provision TrueNAS VM
copy_ssh_configs: true  # Copy SSH configs to localhost (usually WSL for me) for provisioned LXCs/VMs
tz: 'Australia/Sydney'          # Timezone setting
configure_hostname: false
# Default proxmox storage location - allows override per proxmox host in host_vars
default_proxmox_storage: local

# Default VM configs - Each VM has it's overrides specified in it's own host_vars/hostname config file inside the 'vm' mapping
vm_defaults:
  update: true  # Allow vm to update hardware below after full clone
  template: "UbuntuCloud-jammy-22.04" # Name is known after it is provisioned by the role (e.g. roles/proxmox/vm-template-from-ubuntu-cloud-image)
  user: "{{ main_user }}" # Change this if this isn't set outside the role.
  password: "{{ main_pass }}"
  ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEAiwG7uO5R8EzOLvoQEBc9TGyBMMEYlQf7NfwF3JH687WElHLc7bY1HTZ+VcEt+l7kvJfISAeJHdthpCT46ecPirLvz5oIOI1meXRPYXg5fKSJ+itAsfSupjg2/kRUHzI+NJjJap+KU21zEUxCqbTreJ3kSV58F/947uRDyMa0Ofammkx7LY8Kohsr99NtVsHXI71gSTngw/cIe5OR0F1qfxpsBwWw8daN+SYLe0tEtOHVZvGDVDbJhv1GW9PjQxSjx/8QEdi7FMT4ahwHxEcyG5+NhUg+DAo1RKoPYPAM5wwk9O7w+Y31EBP5wYc3FSiOPObcmIoBWxnUrZuD74dtaQ== Sami-id_rsa_personal"
  nameservers:
    - "{{ vm_gateway }}"    # My Primary DNS is the router, it recursively resolves upstream to cloudflare + google, but all requests through it.
    - "8.8.4.4"
  cores: "4"
  memory: "2048"  # ram for each VM in MB - Must be quoted as a string, not an integer
  hdd_size: "16G"
  storage: "{{ default_proxmox_storage }}"  # proxmox storage for VMs
  network_device: 'virtio,bridge=vmbr0'
  default_behavior: compatibility
  # for debian images, there's a bug when resizing so need to set a serial port (serial0 below) -> https://forum.proxmox.com/threads/kernel-panic-after-resizing-a-clone.93738/
  vga: serial0
  serial:
    serial0: socket
  boot_disk: "scsi0"
  boot_order: "c"
  timeout: 300  # My tiny intel nuc can't deal with the IO bottle-necking due to spinning up 5 servers simultaneously :(
  cloudinit_drive: ide2   # After successful creation and bootstrapping, we want to remove the cloud init drive, it gets created as this, change it here if it changes in proxmox.
  ipconfig:
    ipconfig0: "ip={{ vm_network }}200/{{ vm_netmask }},gw={{ vm_gateway }}"  # default ip address is X.X.X.200
  agent: true   # Enable QEMU guest agent

lxc_template:
  storage: local # Location where the template image will download to (not the container storage)
  image: ubuntu-22.04-standard_22.04-1_amd64.tar.zst # run `pveam available` to list available images to download.

lxc_defaults:
  template: "{{ lxc_template.storage }}:vztmpl/{{ lxc_template.image }}"
  storage: "{{ default_proxmox_storage }}" # Location where the container storage will be set to (not the imaage template storage)
  ssh_key: "{{ vm_defaults.ssh_key }}"
  password: "{{ main_pass }}"
  cores: "2"
  cpus: "2"
  memory: 2048 # memory size (in MB)
  disk: "10" # Size of disk (in GB)
  onboot: yes # https://docs.ansible.com/ansible/latest/collections/community/general/proxmox_module.html#parameter-onboot
  nameserver: "{{ vm_gateway }}"  # My Primary DNS is the router, it recursively resolves upstream to cloudflare + google, but all requests through it.
  default_behavior: compatibility
  network_device: 'vmbr0'

nas:
  user: "{{ main_user }}"
  password: "{{ services_password }}"   # Make sure your nas password is up to date with the services password.
  port: '5000'  # Synology NAS Port
  mounts:   # NFS Mounts from the Synology NAS
    docker_backups:
      local_mapping: "{{ user_dir }}/mount/docker_backups"
      remote_mapping: "/volume1/docker/backups"
    k3s_appdata:
      local_mapping: "{{ user_dir }}/mount/k3s_data"
      remote_mapping: "/volume1/docker/data/k3s"
    docker_data:
      local_mapping: "{{ user_dir }}/mount/docker_data"
      remote_mapping: "/volume1/docker/data/containers"
    downloads:
      local_mapping: "{{ user_dir }}/mount/downloads"
      remote_mapping: "/volume1/docker/data/torrents"
    motioneye:
      local_mapping: "{{ user_dir }}/mount/motioneye"
      remote_mapping: "/volume1/docker/data/media/surveillance"
    tv:
      local_mapping: "{{ user_dir }}/mount/tv"
      remote_mapping: "/volume1/docker/data/media/tv"
    movies:
      local_mapping: "{{ user_dir }}/mount/movies"
      remote_mapping: "/volume1/docker/data/media/movies"
    syncthing:
      local_mapping: "{{ user_dir }}/mount/syncthing"
      remote_mapping: "/volume1/docker/data/media/syncthing"
    # sami_pictures:
    #   local_mapping: "{{ user_dir }}/mount/photos/sami"
    #   remote_mapping: "/volume1/docker/data/media/photos/Sami"
    family_pictures:
      local_mapping: "{{ user_dir }}/mount/family"
      remote_mapping: "/volume1/docker/data/media/photos"
