---
- name: Setup cloudflare DNS for LXC's
  community.general.cloudflare_dns:
    zone: "{{ domain_name }}"
    record: "{{ lxc.name | default(inventory_hostname_short) }}"
    type: A
    value: "{{ lxc_ip_address }}"
    api_token: "{{ cloudflare_api_token }}"
  when: create_dns

# This can fail, just ssh to pve and download the template with the command:
# pveam download local <image_name>
# pveam available     # Lists available images to use
- name: Ensure LXC Template exists
  community.general.proxmox_template:
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_pass }}"
    api_host: "localhost"
    storage: "{{ lxc.storage | default(lxc_template.storage) }}"
    template: "{{ lxc.image | default(lxc_template.image) }}"
    timeout: 120  # Turnkey images take time to download

# There is a weird issue where if you are using `proxmox` module, you need to delegate the task to proxmox host and api_host must = localhost
# I believe it is to do with it parsing IP address. I tried with a domain but no luck either. Worked when delegated the task and specifying localhost.
- name: create LXC containers
  community.general.proxmox:
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_pass }}"
    api_host: "localhost"
    proxmox_default_behavior: "{{ lxc.default_behavior | default(lxc_defaults.default_behavior) }}"
    state: "present"
    ostemplate: '{{ lxc_template.storage }}:vztmpl/{{ lxc.image | default(lxc_template.image) }}'
    vmid: "{{ lxc.id | default(omit) }}"
    description: "{{ lxc.description | default(omit) }}"
    hostname: "{{ inventory_hostname | default(omit) }}"
    password: "{{ lxc.password | default(lxc_defaults.password) }}"
    pubkey: "{{ lxc.ssh_key | default(lxc_defaults.ssh_key) }}"
    cores: "{{ lxc.cores | default(lxc_defaults.cores) }}"
    cpus: "{{ lxc.cpus | default(lxc_defaults.cpus) }}"
    memory: "{{ lxc.memory | default(lxc_defaults.memory) }}"
    swap: "{{ lxc.swap | default(omit) }}"
    disk: "{{ lxc.disk | default(lxc_defaults.disk) }}"
    mounts: "{{ lxc.mounts | default(omit) }}"
    netif: "{{ lxc.netif | default(omit) }}"
    storage: "{{ lxc.storage | default(lxc_defaults.storage) }}"  # target storage
    onboot: "{{ lxc.onboot | default(lxc_defaults.onboot) }}"
    nameserver: "{{ lxc.nameserver | default(lxc_defaults.nameserver) }}"
    features: "{{ lxc.features | default(omit) }}"
    unprivileged: "{{ lxc.unprivileged | default(omit) }}"  # Defaults to No -> https://docs.ansible.com/ansible/latest/collections/community/general/proxmox_module.html#parameter-validate_certs
  register: created_cts_pve
  ignore_errors: true

- name: debug lxc creation
  debug:
    var: created_cts_pve

- name: Start containers
  community.general.proxmox:
    vmid: "{{ lxc.id }}"
    node: "{{ proxmox_node }}"
    api_user: "{{ proxmox_api_user }}"
    api_password: "{{ proxmox_api_pass }}"
    api_host: "localhost"
    state: started

- name: Wait until LXC's are started (You may need to ssh into them and ping something on the internet. I dunno why...). Also on some systems like alma, you need to ssh root@ip pw=MAIN_PASS and `dnf install -y openssh-server openssh-clients && systemctl enable sshd && systemctl start sshd. Also uncomment some /etc/ssh/sshd_config settings.`
  wait_for:
    port: 22
    host: "{{ lxc_ip_address }}"
    search_regex: OpenSSH
    # delay: 60
  delegate_to: localhost
  when: wait_for_ssh
