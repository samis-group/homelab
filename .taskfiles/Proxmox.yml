---
version: "3"

tasks:

  main:
    desc: üñ•Ô∏è Configure Proxmox Hosts
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    aliases: ["m"]
    cmds:
      - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/proxmox.yml {{.CLI_ARGS}}"
      - task: ubuntu-vm-template
      - task: debian-vm-template

  run-tags:
    desc: üñ•Ô∏è Run only the tags passed in separated by comma
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags {{.CLI_ARGS}} -e \"{{.CLI_ARGS}}=true\" {{.ANSIBLE_PLAYBOOK_DIR}}/proxmox.yml"

  run-tags-v:
    desc: üñ•Ô∏è VERBOSE - Run only the tags passed in separated by comma
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags {{.CLI_ARGS}} -e \"{{.CLI_ARGS}}=true\" {{.ANSIBLE_PLAYBOOK_DIR}}/proxmox.yml -vvvv"

  ubuntu-vm-template:
    desc: üñ•Ô∏è Create Ubuntu VM Template in Proxmox
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags \"create_ubuntu_vm_template\" -e \"create_ubuntu_vm_template=true\" {{.ANSIBLE_PLAYBOOK_DIR}}/proxmox_vm_templates.yml {{.CLI_ARGS}}"

  force-ubuntu-vm-template:
    desc: üñ•Ô∏è Force (re)create/(re)download Ubuntu VM Template in Proxmox from public ubuntu cloud-init image. Essentially if you want to remake the image from scratch, make this target
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags \"create_ubuntu_vm_template\" -e \"create_ubuntu_vm_template=true force_template_rebuild=true\" {{.ANSIBLE_PLAYBOOK_DIR}}/proxmox_vm_templates.yml {{.CLI_ARGS}}"

  debian-vm-template:
    desc: üñ•Ô∏è Create Debian VM Template in Proxmox
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags \"create_debian_vm_template\" -e \"create_debian_vm_template=true\" {{.ANSIBLE_PLAYBOOK_DIR}}/proxmox_vm_templates.yml {{.CLI_ARGS}}"

  force-debian-vm-template:
    desc: üñ•Ô∏è Force (re)create/(re)download Debian VM Template in Proxmox from public debian cloud-init image. Essentially if you want to remake the image from scratch, make this target.
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags \"create_debian_vm_template\" -e \"create_debian_vm_template=true force_template_rebuild=true\" {{.ANSIBLE_PLAYBOOK_DIR}}/proxmox_vm_templates.yml {{.CLI_ARGS}}"

  provision-vm:
    desc: üñ•Ô∏è Provision vm
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    vars:
      PROVISION_VM: '{{default "docker" .PROVISION_VM}}'
    cmds:
      - "{{.ANSIBLE_PLAYBOOK_CMD}} --tags {{.PROVISION_VM}} {{.ANSIBLE_PLAYBOOK_DIR}}/proxmox_vm.yml {{.CLI_ARGS}}"

  provision-docker:
    desc: üñ•Ô∏è Provision docker vm
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - task: provision-vm
        vars:
          PROVISION_VM: "docker"

  provision-k3s:
    desc: üñ•Ô∏è Provision k3s vm(s)
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - task: provision-vm
        vars:
          PROVISION_VM: "k3s"

  provision-k3s-dev:
    desc: üñ•Ô∏è Provision k3s-dev vm(s)
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - task: provision-vm
        vars:
          PROVISION_VM: "k3s-dev"

  provision-truenas:
    desc: üñ•Ô∏è Provision TrueNAS vm
    dir: provision/ansible
    deps: [':doppler:pull-ansible-inventory']
    cmds:
      - task: provision-vm
        vars:
          PROVISION_VM: "truenas"
