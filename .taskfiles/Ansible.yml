---
version: "3"

tasks:

  init:
    desc: Install / Upgrade Ansible galaxy deps
    dir: provision/ansible
    cmds:
      - ansible-galaxy install -r roles/requirements.yml --roles-path ~/.ansible/roles
      - ansible-galaxy collection install -r requirements.yml --collections-path ~/.ansible/collections

  init-docker:
    desc: Install / Upgrade Ansible galaxy deps inside docker container
    dir: provision/ansible
    cmds:
      - sudo ansible-galaxy install -r roles/requirements.yml --roles-path /usr/share/ansible/roles
      - sudo ansible-galaxy collection install -r requirements.yml --collections-path /usr/share/ansible/collections

  list-hosts:
    desc: List all the hosts
    dir: provision/ansible
    cmds:
      - ansible all {{.ANSIBLE_INVENTORY_CMD}} --list-hosts

  list-tags:
    desc: ðŸ”’ List the available tags that you can run standalone from the playbook
    dir: provision/ansible/playbooks
    cmds:
      - "grep 'tags:' *.yml | grep -v always | awk -F 'tags: ' '{print $2}'"

  # prepare:
  #   desc: Prepare all the k8s nodes for running k3s
  #   dir: provision/ansible
  #   cmds:
  #     - task: :doppler:pull-ansible-inventory
  #     - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-prepare.yml {{.CLI_ARGS}}"

  # install:
  #   desc: Install Kubernetes on the nodes
  #   dir: provision/ansible
  #   cmds:
  #     - task: :doppler:pull-ansible-inventory
  #     - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-installation.yml {{.CLI_ARGS}}"

  # nuke:
  #   desc: Uninstall Kubernetes on the nodes
  #   dir: provision/ansible
  #   interactive: true
  #   cmds:
  #     - task: :doppler:pull-ansible-inventory
  #     - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-nuke.yml {{.CLI_ARGS}}"
  #     - task: reboot

  ping:
    desc: Ping all the hosts
    dir: provision/ansible
    cmds:
      - task: :doppler:pull-ansible-inventory
      - ansible all {{.ANSIBLE_INVENTORY_CMD}} --one-line -m 'ping'

  uptime:
    desc: Uptime of all the hosts
    dir: provision/ansible
    cmds:
      - task: :doppler:pull-ansible-inventory
      - ansible all {{.ANSIBLE_INVENTORY_CMD}} --one-line -a 'uptime'

  # reboot:
  #   desc: Reboot all the k8s nodes
  #   dir: provision/ansible
  #   cmds:
  #     - task: :doppler:pull-ansible-inventory
  #     - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-reboot.yml {{.CLI_ARGS}}"

  poweroff:
    desc: Shutdown all the k8s nodes
    dir: provision/ansible
    cmds:
      - task: :doppler:pull-ansible-inventory
      - ansible kubernetes {{.ANSIBLE_INVENTORY_CMD}} -a '/usr/bin/systemctl poweroff' --become

  lint:
    desc: Ansible lint
    dir: provision/ansible
    cmds:
      - task: :doppler:pull-ansible-inventory
      - ansible-lint --config-file {{.PROJECT_DIR}}/.ansible-lint --project-dir {{.PROJECT_DIR}}/provision/ansible/ --exclude="molecule/"

  test:
    desc: ðŸ§ª Run the test playbook
    dir: provision/ansible
    cmds:
      - task: :doppler:pull-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/test.yml {{.CLI_ARGS}}"

  wsl-personal:
    desc: Setup/Configure WSL
    dir: provision/ansible
    cmds:
      - task: :doppler:pull-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/wsl.yml {{.ANSIBLE_PLAYBOOK_DIR}}/wsl_personal.yml {{.CLI_ARGS}}"

  nuc:
    desc: Setup/Configure Intel Nuc
    dir: provision/ansible
    cmds:
      - task: :doppler:pull-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/nuc.yml {{.CLI_ARGS}}"

  home-assistant:
    desc: Setup/Configure Home Assistant
    dir: provision/ansible
    aliases: ["ha"]
    cmds:
      - task: :doppler:pull-ansible-inventory
      - "{{.ANSIBLE_PLAYBOOK_CMD}} {{.ANSIBLE_PLAYBOOK_DIR}}/home_assistant_vm.yml {{.CLI_ARGS}}"
