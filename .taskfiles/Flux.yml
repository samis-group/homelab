---
version: "3"

vars:
  CLUSTER_DIR: "{{.PROJECT_DIR}}/kubernetes/home"

tasks:

  verify:
    desc: Verify flux meets the prerequisites
    cmds:
      - flux check --pre

  install:
    desc: Install Flux into your cluster
    aliases: ["i"]
    cmds:
      - kubectl apply --server-side --kustomize {{.CLUSTER_DIR}}/bootstrap # Load the resources required for installing flux
      - kubectl apply --server-side --kustomize {{.CLUSTER_DIR}}/flux/config
      # - flux bootstrap github --components-extra=image-reflector-controller,image-automation-controller --owner=samis-group --repository=homelab-test --branch=main --path=kubernetes/home --token-auth --personal
      # - kubectl apply --kustomize {{.CLUSTER_DIR}}/home/default/doppler
      # - kubectl apply --kustomize {{.CLUSTER_DIR}}/bootstrap/
      # - kubectl apply -f {{.CLUSTER_DIR}}/flux/vars/cluster-settings.yaml
      # - kubectl apply --kustomize {{.CLUSTER_DIR}}/flux/config
      # - task: reconcile

  reconcile-git:
    desc: Update git repository for flux changes
    internal: true
    cmds:
      - flux reconcile -n flux-system source git homelab

  reconcile:
    desc: Force update Flux to pull in changes from your Git repository for flux changes
    aliases: ["r"]
    cmds:
      - task: reconcile-git
      - flux reconcile -n flux-system kustomization flux-cluster
      - flux reconcile -n flux-system kustomization flux

  reconcile-apps:
    desc: Force update Flux to pull in changes from your Git repository for apps changes
    aliases: ["ra"]
    cmds:
      - task: reconcile-git
      - flux reconcile -n flux-system kustomization apps-cluster

  hr-restart:
    desc: Restart all failed Helm Releases
    cmds:
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -l bash -c 'flux suspend hr $0 -n $1'
      - kubectl get hr --all-namespaces | grep False | awk '{print $2, $1}' | xargs -l bash -c 'flux resume hr $0 -n $1'

  hr-suspend:
    desc: Suspend all Flux HelmReleases
    cmds:
      - |
        flux get helmrelease --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -l bash -c 'flux -n $0 suspend helmrelease $1'

  hr-resume:
    desc: Resume all Flux HelmReleases
    cmds:
      - |
        flux get helmrelease --all-namespaces --no-header | awk '{print $1, $2}' \
          | xargs -l bash -c 'flux -n $0 resume helmrelease $1'

  nodes:
    desc: List all the nodes in your cluster
    cmds:
      - kubectl get nodes {{.CLI_ARGS | default "-o wide"}}

  pods:
    desc: List all the pods in your cluster
    cmds:
      - kubectl get pods {{.CLI_ARGS | default "-A"}}

  kustomizations:
    desc: List all the kustomizations in your cluster
    cmds:
      - kubectl get kustomizations {{.CLI_ARGS | default "-A"}}

  helmreleases:
    desc: List all the helmreleases in your cluster
    cmds:
      - kubectl get helmreleases {{.CLI_ARGS | default "-A"}}

  helmrepositories:
    desc: List all the helmrepositories in your cluster
    cmds:
      - kubectl get helmrepositories {{.CLI_ARGS | default "-A"}}

  gitrepositories:
    desc: List all the gitrepositories in your cluster
    cmds:
      - kubectl get gitrepositories {{.CLI_ARGS | default "-A"}}

  certificates:
    desc: List all the certificates in your cluster
    cmds:
      - kubectl get certificates {{.CLI_ARGS | default "-A"}}
      - kubectl get certificaterequests {{.CLI_ARGS | default "-A"}}

  ingresses:
    desc: List all the ingresses in your cluster
    cmds:
      - kubectl get ingress {{.CLI_ARGS | default "-A"}}

  resources:
    desc: Gather common resources in your cluster, useful when asking for support
    cmds:
      - task: nodes
      - task: kustomizations
      - task: helmreleases
      - task: helmrepositories
      - task: gitrepositories
      - task: certificates
      - task: ingresses
      - task: pods
